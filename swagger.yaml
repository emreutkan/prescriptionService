openapi: 3.0.0
info:
  title: Prescription Service API
  version: 1.0.0
  description: |
    API for managing prescription creation and retrieval, protected by bearer JWT tokens from the Doctor Auth Service.

servers:
  - url: https://prescriptionservice-bzgca7a4a2feeqge.canadacentral-01.azurewebsites.net/api/v1
    description: Production Server
  - url: http://localhost:8080/api/v1
    description: Staging Server

paths:
  /prescriptions:
    post:
      summary: Create a new prescription
      description: Creates a new prescription for a patient.
      tags:
        - Prescriptions
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrescriptionInput'
      responses:
        '201':
          description: Prescription created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prescription'

    get:
      summary: Get all prescriptions for the authenticated doctor
      description: Retrieves all prescriptions created by the currently authenticated doctor.
      tags:
        - Prescriptions
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of prescriptions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Prescription'

  /prescriptions/tc/{tcId}:
    get:
      summary: Get prescriptions by TC ID
      description: Retrieves all prescriptions for a specific TC ID.
      tags:
        - Prescriptions
      security:
        - bearerAuth: []
      parameters:
        - name: tcId
          in: path
          required: true
          schema:
            type: string
          example: "12345678901"
      responses:
        '200':
          description: List of prescriptions for the TC ID
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Prescription'

  /prescriptions/{prescriptionId}:
    get:
      summary: Get prescription by ID
      description: Retrieves a specific prescription by its ID.
      tags:
        - Prescriptions
      security:
        - bearerAuth: []
      parameters:
        - name: prescriptionId
          in: path
          required: true
          schema:
            type: string
          example: "507f1f77bcf86cd799439011"
      responses:
        '200':
          description: The requested prescription
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prescription'
        '404':
          description: Prescription not found

    delete:
      summary: Delete a prescription
      description: Deletes a specific prescription by its ID.
      tags:
        - Prescriptions
      security:
        - bearerAuth: []
      parameters:
        - name: prescriptionId
          in: path
          required: true
          schema:
            type: string
          example: "507f1f77bcf86cd799439011"
      responses:
        '200':
          description: Prescription deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Prescription deleted successfully"
        '404':
          description: Prescription not found

  /prescriptions/{prescriptionId}/medicines/{medicineId}:
    patch:
      summary: Update medicine in prescription
      description: Updates a specific medicine within a prescription.
      tags:
        - Prescriptions
      security:
        - bearerAuth: []
      parameters:
        - name: prescriptionId
          in: path
          required: true
          schema:
            type: string
          example: "507f1f77bcf86cd799439011"
        - name: medicineId
          in: path
          required: true
          schema:
            type: string
          example: "507f1f77bcf86cd799439012"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MedicineUpdate'
      responses:
        '200':
          description: Medicine updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prescription'
        '404':
          description: Prescription or medicine not found

    delete:
      summary: Delete medicine from prescription
      description: Removes a specific medicine from a prescription.
      tags:
        - Prescriptions
      security:
        - bearerAuth: []
      parameters:
        - name: prescriptionId
          in: path
          required: true
          schema:
            type: string
          example: "507f1f77bcf86cd799439011"
        - name: medicineId
          in: path
          required: true
          schema:
            type: string
          example: "507f1f77bcf86cd799439012"
      responses:
        '200':
          description: Medicine deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prescription'
        '404':
          description: Prescription or medicine not found

  /prescriptions/pending:
    get:
      summary: Get all pending prescriptions
      tags:
        - Pharmacy
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of pending prescriptions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Prescription'
        '500':
          description: Error fetching prescriptions

  /prescriptions/{prescriptionId}:
    patch:
      summary: Submit a prescription with partial completion
      tags:
        - Pharmacy
      security:
        - bearerAuth: []
      parameters:
        - name: prescriptionId
          in: path
          required: true
          description: The ID of the prescription
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                medicines:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Aspirin
                      quantity:
                        type: integer
                        example: 2
                missingMedicines:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Voltaren
      responses:
        '200':
          description: Prescription updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prescription'
        '404':
          description: Prescription not found
        '500':
          description: Error submitting prescription

  /prescriptions/incomplete:
    get:
      summary: Get all incomplete prescriptions for the logged-in pharmacy
      tags:
        - Pharmacy
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of incomplete prescriptions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Prescription'
        '500':
          description: Error fetching incomplete prescriptions

  /prescriptions/{prescriptionId}/complete:
    patch:
      summary: Mark a prescription as complete
      tags:
        - Pharmacy
      security:
        - bearerAuth: []
      parameters:
        - name: prescriptionId
          in: path
          required: true
          description: The ID of the prescription
          schema:
            type: string
      responses:
        '200':
          description: Prescription marked as complete successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prescription'
        '404':
          description: Prescription not found
        '500':
          description: Error completing the prescription

  /prescriptions/search/{tcId}:
    get:
      summary: Search prescriptions by TC ID
      tags:
        - Pharmacy
      security:
        - bearerAuth: []
      parameters:
        - name: tcId
          in: path
          required: true
          description: The TC ID of the patient
          schema:
            type: string
      responses:
        '200':
          description: List of prescriptions for the given TC ID
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Prescription'
        '404':
          description: No prescriptions found for the given TC ID
        '500':
          description: Error searching prescriptions by TC ID

components:
  schemas:
    Medicine:
      type: object
      required:
        - name
        - dosage
        - quantity
      properties:
        _id:
          type: string
          example: "507f1f77bcf86cd799439012"
        name:
          type: string
          example: "Aspirin"
        dosage:
          type: string
          example: "500mg"
        quantity:
          type: integer
          example: 30

    MedicineUpdate:
      type: object
      properties:
        name:
          type: string
          example: "Aspirin"
        dosage:
          type: string
          example: "500mg"
        quantity:
          type: integer
          example: 30

    PrescriptionInput:
      type: object
      required:
        - tcId
        - medicines
      properties:
        tcId:
          type: string
          example: "12345678901"
        medicines:
          type: array
          items:
            $ref: '#/components/schemas/Medicine'

    Prescription:
      type: object
      properties:
        id:
          type: string
          example: "64a7f2e50935712345678abc"
        tcId:
          type: string
          example: "12345678901"
        doctorId:
          type: string
          example: "64a7f1c20935712345678xyz"
        pharmacyId:
          type: string
          example: "64a7f2e50935712345678pharm"
        medicines:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                example: "Aspirin"
              quantity:
                type: integer
                example: 1
        status:
          type: string
          enum: ['Pending', 'Incomplete', 'Completed']
          example: "Completed"
        missingMedicines:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                example: "Voltaren"
        createdAt:
          type: string
          format: date-time
          example: "2025-01-24T12:00:00Z"
        updatedAt:
          type: string
          format: date-time
          example: "2025-01-25T12:00:00Z"

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
